{"version":3,"sources":["components/Dilogs/Dialogs.module.css","components/Dilogs/DialogsItme/DialogsItem.tsx","components/Dilogs/Message/Message.tsx","components/Dilogs/DialogsContainer.tsx","components/Dilogs/Dialogs.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","activeClassName","name","Message","message","compose","connect","state","dialogsPropsAll","isAuth","auth","dispatch","addMessage","newMessageText","addMessageCreateAction","withAuthRedirect","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","formik","useFormik","initialValues","validate","values","errors","length","onSubmit","value","resetForm","dialogs","dialogsItem","messages","handleSubmit","textArea_Button","TextField","label","margin","getFieldProps","Button","variant","type","color"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,gBAAkB,mC,+FCQ3KC,EAAa,SAACC,GACvB,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAIC,gBAAiBL,IAAEE,QAASJ,EAAMQ,QCLtEC,EAAU,SAACT,GACpB,OAAO,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,kDCe9BC,sBACXC,aAbkB,SAACC,GACnB,MAAO,CACHC,gBAAgBD,EAAMC,gBACtBC,OAAOF,EAAMG,KAAKD,WAGD,SAACE,GACtB,MAAO,CACHC,WAAW,SAACC,GAAyBF,EAASG,YAAuBD,SAMzEE,IAFWV,ECFQ,SAACX,GAEpB,IAAIsB,EAAkBtB,EAAMc,gBAAgBS,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAMF,GAAImB,EAAEnB,QAC7FoB,EAAmB1B,EAAMc,gBAAgBa,aAAaH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASlB,QAASkB,EAAElB,aACjFmB,EAASC,YAAU,CACrBC,cAAc,CACVrB,QAAQ,IAEZsB,SAAS,SAACC,GACN,IAAMC,EAAuB,GAI7B,OAHGD,EAAOvB,QAAQyB,OAAS,KACvBD,EAAOxB,QAAU,IAEdwB,GAGXE,SAAU,SAAAC,GACNrC,EAAMkB,WAAWmB,EAAM3B,SACvBmB,EAAOS,eAKf,OACI,yBAAKrC,UAAWC,IAAEqC,SACd,yBAAKtC,UAAWC,IAAEsC,aACblB,GAEL,yBAAKrB,UAAWC,IAAEuC,UACd,6BAAMf,GACN,6BACI,6BACI,0BAAMU,SAAUP,EAAOa,cACnB,yBAAKzC,UAAWC,IAAEyC,iBACd,kBAACC,EAAA,EAAD,eACIC,MAAM,cACNC,OAAO,SACPtC,KAAK,WACDqB,EAAOkB,cAAc,aAE7B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAM,SAAWC,MAAO,WAAnD","file":"static/js/4.7f17d6e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yaZY\",\"dialogsItem\":\"Dialogs_dialogsItem__41GdX\",\"active\":\"Dialogs_active__i8E9B\",\"messages\":\"Dialogs_messages__1nWHq\",\"textArea_Button\":\"Dialogs_textArea_Button__29UBz\"};","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\ntype DialogItemPropsType = {\r\n    name: string,\r\n    id: string\r\n}\r\nexport const DialogItem = (props: DialogItemPropsType) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\nexport const Message = (props: MessagePropsType) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n","import {addMessageCreateAction} from \"../../redux/dialogs_reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddMessageType} from \"../../redux/store\";\r\nimport {stateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state:stateType) => {\r\n    return {\r\n        dialogsPropsAll:state.dialogsPropsAll,\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch:(action: AddMessageType ) => void)=> {\r\n    return {\r\n        addMessage:(newMessageText:string)=>{dispatch(addMessageCreateAction(newMessageText))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs) as React.ComponentType\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogsItme/DialogsItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {dialogsAllType} from \"../../redux/store\";\r\nimport {useFormik} from \"formik\";\r\n\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport type dialogsPropsType2 = {\r\n    addMessage: (newMessageText: string) => void\r\n    dialogsPropsAll: dialogsAllType\r\n    isAuth:boolean\r\n}\r\ntype FormikErrorType = {\r\n    message?: string\r\n}\r\n\r\n\r\nexport const Dialogs = (props: dialogsPropsType2) => {\r\n\r\n    let dialogsElements = props.dialogsPropsAll.dialogsData.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = props.dialogsPropsAll.messagesData.map(m => <Message message={m.message}/>)\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            message:''\r\n        },\r\n        validate:(values) => {\r\n            const errors:FormikErrorType={}\r\n            if(values.message.length > 30) {\r\n                errors.message = ''\r\n            }\r\n            return errors\r\n        }\r\n        ,\r\n        onSubmit: value => {\r\n            props.addMessage(value.message)\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className={s.textArea_Button}>\r\n                                <TextField\r\n                                    label=\"Add message\"\r\n                                    margin=\"normal\"\r\n                                    name=\"message\"\r\n                                    {...formik.getFieldProps('message')}\r\n                                />\r\n                                <Button variant=\"outlined\" type={'submit'}  color={'primary'}>Add message</Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}